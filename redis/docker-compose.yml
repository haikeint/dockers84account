# docker-compose -f redis/docker-compose.yml up -d

# docker run -d --name some-redis -p 7010:6379 redis:6.2

# redis-cli --cluster create 172.18.1.1:6379 172.18.1.2:6379 172.18.1.3:6379 172.18.1.4:6379 172.18.1.5:6379 172.18.1.6:6379 --cluster-replicas 0

#redis-cli
# cluster info
# cluster nodes
networks:
    s84account:
        external: true
volumes:
    redis-data-1:
    redis-data-2:
    redis-data-3:
    redis-data-4:
    redis-data-5:
    redis-data-6:

services:
    redis-node-1:
        image: redis:6.2
        container_name: redis-node-1
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.1
        volumes:
            - redis-data-1:/data

    redis-node-2:
        image: redis:6.2
        container_name: redis-node-2
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.2
        volumes:
            - redis-data-2:/data

    redis-node-3:
        image: redis:6.2
        container_name: redis-node-3
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.3
        volumes:
            - redis-data-3:/data

    redis-node-4:
        image: redis:6.2
        container_name: redis-node-4
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.4
        volumes:
            - redis-data-4:/data

    redis-node-5:
        image: redis:6.2
        container_name: redis-node-5
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.5
        volumes:
            - redis-data-5:/data

    redis-node-6:
        image: redis:6.2
        container_name: redis-node-6
        command:
            [
                'redis-server',
                '--cluster-enabled',
                'yes',
                '--cluster-config-file',
                'nodes.conf',
                '--cluster-node-timeout',
                '5000',
                '--appendonly',
                'yes',
            ]
        networks:
            s84account:
                ipv4_address: 172.18.1.6
        volumes:
            - redis-data-6:/data
